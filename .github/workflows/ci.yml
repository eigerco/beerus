name: ci
on:
  workflow_dispatch:
  schedule:
    - cron: "0 8 * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and export
        uses: docker/build-push-action@v4
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: beerus:ci
          outputs: type=docker,dest=/tmp/beerus.tar

      - name: Upload beerus docker image as artifact
        uses: actions/upload-artifact@v3
        with:
          name: beerus
          path: /tmp/beerus.tar

  e2e-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies + hurl
        run: |
          curl --location --remote-name https://github.com/Orange-OpenSource/hurl/releases/download/2.0.1/hurl_2.0.1_amd64.deb
          sudo apt-get update && sudo apt-get install -y ./hurl_2.0.1_amd64.deb

      - name: Download beerus docker image
        uses: actions/download-artifact@v3
        with:
          name: beerus
          path: /tmp

      - name: Load beerus docker image
        run: |
          docker load --input /tmp/beerus.tar
          docker image ls -a

      - name: Run RPC in the background
        env:
          BEERUS_VERSION: "ci"
          NETWORK: "mainnet"
          ETH_EXECUTION_RPC: ${{ secrets.ETH_EXECUTION_RPC }}
          STARKNET_RPC: ${{ secrets.STARKNET_RPC }}
        run: |
          docker compose up -d
          hurl --retry --retry-max-count 60 ./examples/rpc/starknet_blockNumber.hurl > /dev/null

      - name: Run end-to-end tests
        id: e2e_test
        run: bash ./scripts/e2e-tests.sh

      - name: Generate job summary
        run: cat summary.md >> $GITHUB_STEP_SUMMARY
        if: always()

      - name: Save docker logs
        run: docker-compose logs > service_logs.txt
        if: always()

      - name: Upload docker logs
        uses: actions/upload-artifact@v2
        with:
          name: service_logs
          path: service_logs.txt
        if: always()
